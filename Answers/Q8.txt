Creating an API Documentation requires the following steps:

1. Identify the purpose of the API: This will help in creating clear, readable and concise API documentation.

2. Research existing APIs: Look for similar products or services to your product/ service that you want to replicate.

3. Determine API endpoints: List down all the different endpoints that your API can take, including GET, POST, PUT, DELETE and any other related methods available.

4. Define HTTP methods: Identify how your API will be accessed by users. For example, if you're creating a blog post API, it might include `GET`, `POST`, `PUT`, `DELETE`.

5. Describe the data models: This section should describe what type of data you'll store in your API endpoints and provide guidelines for accessing this information.

6. Explain HTTP headers and methods: The API documentation will need to specify HTTP method, content-type, and any other appropriate HTTP headers required by the server.

7. Provide a User Guide: Include detailed instructions on how users should use your API. This includes steps like logging in, creating an account or setting up new accounts, requesting specific information from the API, etc.

8. Add Example Queries/Steps: For each endpoint or method, include examples that can be used by users to better understand it and create a user-friendly experience for them.

9. Include Usage notes: These sections should explain what happens when you request something on your API. This might be useful if someone is not familiar with the API and wants to know how to use it safely.

10. Document Security Measures: You need to document any security measures that are used by your API, such as SSL/TLS encryption, authentication protocols, etc.

11. Include Links to Documentation: The documentation should also include links to other relevant documents like API reference documentation, user guides, and more.

12. Finalize the Content: Review the content for spelling and grammar errors, and make sure that all elements are properly formatted with proper indentation and spacing.

With these steps in mind, you can create a detailed and comprehensive API documentation that will help users find your service quickly and easily.